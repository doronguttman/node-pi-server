"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PROD = process.env["ENVIRONMENT"] === "PROD";
class LoggingMiddleware {
    constructor() {
        console.log(LoggingMiddleware.name, `PROD: ${PROD}`);
    }
    logIncoming(req, res, next) {
        console.log(`${new Date().toISOString()} >>> ${req.method} ${req.url}`);
        next();
    }
    logOutgoing(req, res, next) {
        console.log(`${new Date().toISOString()} <<< ${req.method} ${req.url}: ${res.statusCode}`);
        next();
    }
    logErrors(err, req, res, next) {
        let errorCode = err.statusCode && err.statusCode || 500;
        console.error(`${new Date().toISOString()} <<< ${req.method} ${req.url}: ${errorCode}`, err.stack);
        let body = PROD
            ? err && err.statusCode && err.message || "Oops... something went wrong..."
            : err && (err.stack || (err.toString && err.toString()) || String(err));
        res.status(errorCode).send(body);
    }
}
exports.default = new LoggingMiddleware();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlL2xvZ2dpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxLQUFLLE1BQU0sQ0FBQztBQUVuRDtJQUNJO1FBQ0ksT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsU0FBUyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFTSxXQUFXLENBQUMsR0FBWSxFQUFFLEdBQWEsRUFBRSxJQUFrQjtRQUM5RCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsUUFBUSxHQUFHLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3hFLElBQUksRUFBRSxDQUFDO0lBQ1gsQ0FBQztJQUVNLFdBQVcsQ0FBQyxHQUFZLEVBQUUsR0FBYSxFQUFFLElBQWtCO1FBQzlELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLFdBQVcsRUFBRSxRQUFRLEdBQUcsQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLEdBQUcsS0FBSyxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztRQUMzRixJQUFJLEVBQUUsQ0FBQztJQUNYLENBQUM7SUFFTSxTQUFTLENBQUMsR0FBUSxFQUFFLEdBQVksRUFBRSxHQUFhLEVBQUUsSUFBa0I7UUFDdEUsSUFBSSxTQUFTLEdBQUcsR0FBRyxDQUFDLFVBQVUsSUFBSSxHQUFHLENBQUMsVUFBVSxJQUFJLEdBQUcsQ0FBQztRQUN4RCxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsUUFBUSxHQUFHLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxHQUFHLEtBQUssU0FBUyxFQUFFLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRW5HLElBQUksSUFBSSxHQUFHLElBQUk7WUFDWCxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxVQUFVLElBQUksR0FBRyxDQUFDLE9BQU8sSUFBSSxpQ0FBaUM7WUFDM0UsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxJQUFJLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQzNFLEdBQUcsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Q0FDSjtBQUVELGtCQUFlLElBQUksaUJBQWlCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVxdWVzdCwgUmVzcG9uc2UsIE5leHRGdW5jdGlvbn0gZnJvbSBcImV4cHJlc3NcIjtcclxuY29uc3QgUFJPRCA9IHByb2Nlc3MuZW52W1wiRU5WSVJPTk1FTlRcIl0gPT09IFwiUFJPRFwiO1xyXG5cclxuY2xhc3MgTG9nZ2luZ01pZGRsZXdhcmUge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coTG9nZ2luZ01pZGRsZXdhcmUubmFtZSwgYFBST0Q6ICR7UFJPRH1gKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbG9nSW5jb21pbmcocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlLCBuZXh0OiBOZXh0RnVuY3Rpb24pIDogdm9pZCB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYCR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpfSA+Pj4gJHtyZXEubWV0aG9kfSAke3JlcS51cmx9YCk7XHJcbiAgICAgICAgbmV4dCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBsb2dPdXRnb2luZyhyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UsIG5leHQ6IE5leHRGdW5jdGlvbikgOiB2b2lkIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhgJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9IDw8PCAke3JlcS5tZXRob2R9ICR7cmVxLnVybH06ICR7cmVzLnN0YXR1c0NvZGV9YCk7XHJcbiAgICAgICAgbmV4dCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBsb2dFcnJvcnMoZXJyOiBhbnksIHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSwgbmV4dDogTmV4dEZ1bmN0aW9uKSA6dm9pZCB7XHJcbiAgICAgICAgbGV0IGVycm9yQ29kZSA9IGVyci5zdGF0dXNDb2RlICYmIGVyci5zdGF0dXNDb2RlIHx8IDUwMDtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGAke25ldyBEYXRlKCkudG9JU09TdHJpbmcoKX0gPDw8ICR7cmVxLm1ldGhvZH0gJHtyZXEudXJsfTogJHtlcnJvckNvZGV9YCwgZXJyLnN0YWNrKTtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgYm9keSA9IFBST0RcclxuICAgICAgICAgICAgPyBlcnIgJiYgZXJyLnN0YXR1c0NvZGUgJiYgZXJyLm1lc3NhZ2UgfHwgXCJPb3BzLi4uIHNvbWV0aGluZyB3ZW50IHdyb25nLi4uXCJcclxuICAgICAgICAgICAgOiBlcnIgJiYgKGVyci5zdGFjayB8fCAoZXJyLnRvU3RyaW5nICYmIGVyci50b1N0cmluZygpKSB8fCBTdHJpbmcoZXJyKSlcclxuICAgICAgICByZXMuc3RhdHVzKGVycm9yQ29kZSkuc2VuZChib2R5KTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IExvZ2dpbmdNaWRkbGV3YXJlKCk7XHJcbiJdfQ==